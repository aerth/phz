# phzd
# Makefile generated by 'gomaker' 

NAME ?= phzd
VERSION ?= 
PREFIX ?= /usr/local/bin
VER ?= X
COMMIT != git rev-parse --verify --short HEAD
COMMIT ?= ${VER}
RELEASE ?= ${VERSION}${COMMIT}


all:	${NAME}


build:
	@echo 'Building ${NAME} version ${RELEASE}'

	go get -d -x -v .
	go build -o ${NAME} -x --ldflags "-s -extldflags='-static' -X main.version=${RELEASE}" ./cmd/phzd
	go build -o phz-cli -x --ldflags "-s -extldflags='-static' -X main.version=${RELEASE}" ./cmd/phz-cli
	@echo 'Successfully built ${NAME}'



${NAME}: build


install-phzd:
	@echo 'PREFIX=${PREFIX}'

	@mkdir -p ${PREFIX}
	@mv ${NAME} ${PREFIX}/${NAME}
	@echo 'Successfully installed ${NAME} to ${PREFIX}'

clean:
	@rm -v ${NAME} phz-cli

test: build
	go test -v ./phz/...
	go test -v ./cmd/...
	@echo Running the phz command line interpreter:
	./phz-cli test.phz

# for heroku
run-demo: build
	./phzd -conf config.toml.default -addr 0.0.0.0:80 -v

run: build
	env -i myapikey=secret11223344 PATH=/usr/bin:/bin:/usr/local/bin ./phzd -conf config.toml.default -addr 0.0.0.0:8080 -v

install:
	@install -v phz-cli /usr/local/bin/phz
	@echo "Successfully installed phz interpreter"
	@echo "Now you can use '#!/usr/local/bin/phz' in your scripts!"
	@echo "Try some of the executable scripts in testdata, such as testdata/phzzr"
	
